# Buildspec runs in the build stage of your pipeline.
version: 0.2
phases:
  install:
    runtime-versions:
      docker: 20
    commands:
      - echo "cd into $CODEBUILD_SRC_DIR/backend"
      - cd $CODEBUILD_SRC_DIR/backend-flask
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $IMAGE_URL
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build -t backend-flask .
      - "docker tag $REPO_NAME $IMAGE_URL/$REPO_NAME"
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image..
      - docker push $IMAGE_URL/$REPO_NAME
      - cd $CODEBUILD_SRC_DIR
      - echo "imagedefinitions.json > [{\"name\":\"$CONTAINER_NAME\",\"imageUri\":\"$IMAGE_URL/$REPO_NAME\"}]" > imagedefinitions.json
      - printf "[{\"name\":\"$CONTAINER_NAME\",\"imageUri\":\"$IMAGE_URL/$REPO_NAME\"}]" > imagedefinitions.json

env:
  variables:
    AWS_ACCOUNT_ID: 952560381965
    AWS_DEFAULT_REGION: us-east-1
    CONTAINER_NAME: backend-flask
    AWS_COGNITO_USER_POOL_ID: us-east-1_GytnSn5Lo
    AWS_COGNITO_USER_POOL_CLIENT_ID: 1leg188bgfi4r4qm{jtfo1r85g7
    IMAGE_URL: 952560381965.dkr.ecr.us-east-1.amazonaws.com
    REPO_NAME: backend-flask:Latest
  parameter-store:
    ACCESS_kEY_ID: /cruddur/backend-flask/${ACCESS_kEY_ID}
    AWS_SECRET_ACCESS_KEY: /cruddur/backend-flask/${AWS_SECRET_ACCESS_KEY}
    CONNECTION_URL: /cruddur/backend-flask/${CONNECTION_URL}
    ROLLBAR_ACCESS_TOKEN: /cruddur/backend-flask/${ROLLBAR_ACCESS_TOKEN}
    OTEL_EXPORTER_OTLP_HEADERS: /cruddur/backend-flask/x-honeycomb-team=${HONEYCOMB_API_KEY}
    

artifacts:
  files:
    - imagedefinitions.json
